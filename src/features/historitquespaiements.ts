// Importation des fonctions pour charger les donn√©es
import { loadData, loadPayer } from "../depenseManager";

/**
 * Fonction pour afficher l'historique des d√©penses d'un groupe sp√©cifique
 *  - l'ID du groupe √† analyser
 */

export async function paymentHystorique(groupeId: number) {
    // Chargement de toutes les donn√©es (d√©penses, paiements, etc.)
    const data = loadData();

    // Filtre les d√©penses qui appartiennent au groupe sp√©cifi√©
    const depenseGroupe = data.depenses.filter((d) => d.groupeId === groupeId);

    // Si aucune d√©pense n'existe dans ce groupe, affiche un message et sort
    if (depenseGroupe.length === 0) {
        console.log("Il y pas de depense dans ce groupe");
        return;
    }

    // Affiche un en-t√™te indiquant que c'est l'historique du groupe
    console.log(`\nüìú Historique des d√©penses du groupe ${groupeId} :\n`);

    // Parcourt chaque d√©pense pour afficher ses d√©tails
    depenseGroupe.forEach((depense) => {
        console.log(`üßæ D√©pense: ${depense.nom}`); // Nom de la d√©pense
        console.log(`üí∞ Montant total: ${depense.montant} FCFA`); // Montant total d√©pens√©
        // Affiche la date de la d√©pense format√©e en locale
        console.log(`üìÖ Date: ${new Date(depense.date).toLocaleDateString()}`);
        console.log("üë• Paiements :"); // Introduction √† la liste des paiements

        // Si la d√©pense a des paiements, les affiche
        depense.paiements?.forEach((paiement) => {
            console.log(
                `- Membre ${paiement.membreId} a pay√© ${
                    paiement.sold
                } FCFA le ${new Date(paiement.date).toLocaleDateString()}`
            );
        });
        // Ajoute un s√©parateur visuel pour am√©liorer la lisibilit√©
        console.log("\n-----------------------------\n");
    });
}